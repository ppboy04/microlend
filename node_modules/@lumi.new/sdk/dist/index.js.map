{"version":3,"sources":["../src/index.ts","../src/core/auth-client.ts","../src/lib/request.ts","../src/utils/common.ts","../src/utils/storage.ts","../src/core/entity-client.ts","../src/core/entities-client.ts","../src/lib/error.ts","../src/tools/email-tool.ts","../src/tools/file-tool.ts","../src/core/tools-client.ts","../src/core/lumi-client.ts"],"sourcesContent":["export * from './core/auth-client'\nexport * from './core/entities-client'\nexport * from './core/entity-client'\nexport * from './core/lumi-client'\nexport * from './core/tools-client'\nexport * from './tools'\n","import type { LumiClient } from '@/core/lumi-client'\nimport type { ApiResponse } from '@/lib/request'\nimport { v4 } from 'uuid'\nimport { MessageType, StorageKey } from '@/constants'\nimport { request } from '@/lib/request'\nimport { getIcon, getTitle } from '@/utils/common'\nimport { getStorage, setStorage } from '@/utils/storage'\n\nexport interface User {\n  userId: string\n  email: string\n  userName: string\n  createdTime: string\n}\n\nexport interface MessageSignInData {\n  projectId: string\n  accessToken: string\n  user: User\n}\n\nexport type MessageDataReceive = {\n  type: MessageType.READY\n} | {\n  type: MessageType.SIGN_IN\n  data: MessageSignInData\n}\n\nexport interface MessageInitData {\n  projectId: string\n  icon: string | null\n  title: string | null\n}\n\nexport interface MessageDataSend {\n  type: MessageType.INIT\n  data: MessageInitData\n}\n\nexport class LumiAuthClient {\n  readonly #lumi: LumiClient\n  readonly #popupName: string = `lumi-auth-${v4()}`\n\n  constructor(lumi: LumiClient) {\n    this.#lumi = lumi\n  }\n\n  /** 访问令牌 */\n  public get accessToken(): string | null {\n    return getStorage<string>(StorageKey.ACCESS_TOKEN)\n  }\n\n  public set accessToken(accessToken: string | null) {\n    setStorage(StorageKey.ACCESS_TOKEN, accessToken)\n  }\n\n  /** 用户 */\n  public get user(): User | null {\n    return getStorage<User>(StorageKey.USER)\n  }\n\n  public set user(user: User | null) {\n    setStorage(StorageKey.USER, user)\n  }\n\n  public get isAuthenticated(): boolean {\n    return !!this.accessToken\n  }\n\n  /** 登录 */\n  public signIn(): Promise<MessageSignInData> {\n    const width = 800\n    const height = 600\n    const left = (window.screen.width - width) / 2\n    const top = (window.screen.height - height) / 2\n    const popup = window.open(this.#lumi.config.authOrigin, this.#popupName, `width=${width},height=${height},left=${left},top=${top}`)\n\n    let cleanup: () => void\n    return new Promise<MessageSignInData>((resolve, reject) => {\n      if (!popup)\n        return reject(new Error('Open auth window failed'))\n\n      const timer = setInterval(() => {\n        if (popup.closed)\n          reject(new Error('Auth window closed'))\n      }, 1000)\n\n      // 全局点击事件处理函数 - 重新聚焦popup并阻止事件传播\n      const handleGlobalClick = (event: MouseEvent): void => {\n        if (!popup.closed) {\n          popup.focus()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }\n\n      const handleMessage = ({ data, origin, source }: MessageEvent<MessageDataReceive | null>): void => {\n        if (origin !== this.#lumi.config.authOrigin || source !== popup)\n          return\n\n        switch (data?.type) {\n          case MessageType.READY: {\n            popup.postMessage({\n              type: MessageType.INIT,\n              data: {\n                projectId: this.#lumi.config.projectId,\n                icon: getIcon(),\n                title: getTitle(),\n              },\n            } satisfies MessageDataSend, this.#lumi.config.authOrigin)\n            break\n          }\n          case MessageType.SIGN_IN: {\n            if (data.data.projectId !== this.#lumi.config.projectId)\n              break\n            popup.close()\n            window.focus()\n            this.accessToken = data.data.accessToken\n            this.user = data.data.user\n            resolve(data.data)\n            break\n          }\n        }\n      }\n\n      window.addEventListener('message', handleMessage)\n      // 添加全局点击事件监听器，使用捕获阶段确保优先处理\n      document.addEventListener('click', handleGlobalClick, true)\n\n      cleanup = () => {\n        clearInterval(timer)\n        window.removeEventListener('message', handleMessage)\n        document.removeEventListener('click', handleGlobalClick, true)\n      }\n    }).finally(() => cleanup?.())\n  }\n\n  /** 退出登录 */\n  public signOut(): void {\n    this.accessToken = null\n    this.user = null\n  }\n\n  /** 获取当前用户 */\n  public async refreshUser(): Promise<User> {\n    const res = await request<ApiResponse<User>>(this.#lumi, '/lm/user/info', {\n      method: 'POST',\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n    this.user = res.data\n    return res.data\n  }\n\n  /** 监听登录状态变化 */\n  public onAuthChange(callback: (args: {\n    isAuthenticated: boolean\n    user: User | null\n  }) => void): () => void {\n    const handleStorageChange = (event: StorageEvent): void => {\n      if (event.key === StorageKey.ACCESS_TOKEN || event.key === StorageKey.USER || event.key === null) {\n        callback({\n          isAuthenticated: this.isAuthenticated,\n          user: this.user,\n        })\n      }\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n    }\n  }\n}\n","import type { FetchContext, FetchOptions } from 'ofetch'\nimport type { LumiClient } from '@/core/lumi-client'\nimport Base64 from 'crypto-js/enc-base64'\nimport Hex from 'crypto-js/enc-hex'\nimport HmacSHA256 from 'crypto-js/hmac-sha256'\nimport SHA256 from 'crypto-js/sha256'\nimport { ofetch } from 'ofetch'\n\nconst SECRET_KEY = '6QrJZ7pFCmBZAeIJF7IArvkCz+EtzA0RVcpHkiQIsQyhs7QtCS9P+CueZdHfB2OtJcgX3BbqY9pfpWeAVTqCwQ=='\n\n/**\n * RFC 3986 compliant URI encoding.\n */\nfunction rfc3986Encode(str: string): string {\n  return encodeURIComponent(str).replace(/[!'()*]/g, c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`)\n}\n\n/**\n * 创建签名拦截器函数\n * @param secretKey 签名密钥\n * @returns ofetch onRequest 拦截器函数\n */\nexport function createSignatureInterceptor(secretKey: string) {\n  return (context: FetchContext) => {\n    const { options } = context\n    // 生成签名\n    const timestamp = Math.floor(Date.now() / 1000).toString()\n    const nonce = Math.random().toString(36).substring(2, 15)\n\n    // 构建查询字符串\n    const queryParams: Record<string, string> = { ...options.query }\n    const canonicalQueryString = Object.keys(queryParams).sort().map(key => `${rfc3986Encode(key)}=${rfc3986Encode(String(queryParams[key]))}`).join('&')\n\n    // 构建签名头\n    const headersToSign: Record<string, string> = {\n      'x-timestamp': timestamp,\n      'x-nonce': nonce,\n    }\n    const canonicalHeaders = Object.keys(headersToSign).sort().map(key => `${key}:${headersToSign[key]}`).join('\\n')\n\n    // 构建载荷哈希\n    const payload = options.body ? JSON.stringify(options.body) : ''\n    const hashedPayload = SHA256(payload).toString(Hex)\n\n    // 构建规范请求\n    const canonicalRequest = [canonicalQueryString, canonicalHeaders, hashedPayload].join('\\n')\n    console.warn('Client-side Canonical Request V3:\\n', canonicalRequest)\n\n    // 生成签名\n    const signature = Base64.stringify(HmacSHA256(canonicalRequest, secretKey))\n\n    // 添加签名头到请求\n    const headers = new Headers(options.headers)\n    Object.entries(headersToSign).forEach(([key, value]) => {\n      headers.set(key, value)\n    })\n    headers.set('X-Sign', signature)\n    options.headers = headers\n  }\n}\n\nexport interface ApiResponse<T> {\n  code: number\n  message: string\n  data: T\n}\n\nexport interface PaginationData<T> {\n  total: number\n  list: T[]\n}\n\nexport function request<T>(lumi: LumiClient, uri: string, options: FetchOptions<'json'> = {}): Promise<T> {\n  // 添加认证头（如果存在）\n  if (lumi.auth.accessToken) {\n    options.headers = {\n      Authorization: `Bearer ${lumi.auth.accessToken}`,\n      ...options.headers,\n    }\n  }\n\n  return ofetch<T>(uri, {\n    baseURL: lumi.config.apiBaseUrl,\n    ...options,\n    onRequest: createSignatureInterceptor(SECRET_KEY),\n  })\n}\n","export function getIcon(): string | null {\n  return document.querySelector<HTMLLinkElement>('link[rel=\"icon\"]')?.href ?? null\n}\n\nexport function getTitle(): string | null {\n  return document.title ?? null\n}\n","import type { StorageKey } from '@/constants'\n\nexport function setStorage<T>(key: StorageKey, value: T, storage: Storage = localStorage): void {\n  const oldValue = storage.getItem(key)\n  const newValue = value ? JSON.stringify(value) : null\n  if (newValue)\n    storage.setItem(key, newValue)\n  else\n    storage.removeItem(key)\n\n  window.dispatchEvent(new StorageEvent('storage', {\n    key,\n    oldValue,\n    newValue,\n    storageArea: storage,\n  }))\n}\n\nexport function getStorage<T>(key: StorageKey, storage: Storage = localStorage): T | null {\n  const value = storage.getItem(key)\n  try {\n    return value ? JSON.parse(value) : null\n  }\n  catch (_e) {\n    return null\n  }\n}\n","import type { LumiClient } from '@/core/lumi-client'\nimport type { ApiResponse, PaginationData } from '@/lib/request'\nimport { request } from '@/lib/request'\n\nexport interface Entity extends Record<string, any> {\n  id: string\n}\n\nexport class EntityClient {\n  readonly #lumi: LumiClient\n  public readonly entityName: string\n\n  constructor(lumi: LumiClient, entityName: string) {\n    this.#lumi = lumi\n    this.entityName = entityName\n  }\n\n  /** 查询文档列表 */\n  public async list({ filter, sort, limit, skip }: {\n    filter?: any\n    sort?: Record<string, 1 | -1>\n    limit?: number\n    skip?: number\n  } = {}): Promise<PaginationData<Entity>> {\n    if (!limit) {\n      const res = await request<ApiResponse<Entity[]>>(this.#lumi, this.uri('/list'), {\n        method: 'POST',\n        body: { filter, sort },\n      })\n      if (res.code !== 200)\n        throw new Error(res.message)\n      return {\n        total: res.data.length,\n        list: res.data,\n      }\n    }\n    else {\n      const res = await request<ApiResponse<PaginationData<Entity>>>(this.#lumi, this.uri('/find'), {\n        method: 'POST',\n        body: { filter, sort, limit, skip },\n      })\n      if (res.code !== 200)\n        throw new Error(res.message)\n      return res.data\n    }\n  }\n\n  /** 获取单个文档 */\n  public async get(id: string): Promise<Entity | null> {\n    const res = await request<ApiResponse<Entity>>(this.#lumi, this.uri(`/${id}`), {\n      method: 'GET',\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n    return res.data\n  }\n\n  /** 创建文档 */\n  public async create(data: Record<string, any>): Promise<Entity> {\n    const res = await request<ApiResponse<Entity>>(this.#lumi, this.uri(), {\n      method: 'POST',\n      body: data,\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n    return res.data\n  }\n\n  /** 批量创建文档 */\n  public async createMany(data: Record<string, any>[]): Promise<Entity[]> {\n    const res = await request<ApiResponse<Entity[]>>(this.#lumi, this.uri('/batch'), {\n      method: 'POST',\n      body: data,\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n    return res.data\n  }\n\n  /** 更新文档 */\n  public async update(id: string, data: Record<string, any>): Promise<Entity> {\n    const res = await request<ApiResponse<Entity>>(this.#lumi, this.uri(), {\n      method: 'PUT',\n      body: { filter: { _id: id }, update: data },\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n    return res.data\n  }\n\n  /** 删除文档 */\n  public async delete(id: string): Promise<void> {\n    const res = await request<ApiResponse<null>>(this.#lumi, this.uri(`/${id}`), {\n      method: 'DELETE',\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n  }\n\n  /** 批量删除文档 */\n  public async deleteMany(ids: string[]): Promise<void> {\n    const res = await request<ApiResponse<null>>(this.#lumi, this.uri('/batch-by-ids'), {\n      method: 'DELETE',\n      params: { ids },\n    })\n    if (res.code !== 200)\n      throw new Error(res.message)\n  }\n\n  private uri(suffix = ''): string {\n    return `/lm/${this.#lumi.config.projectId}/${this.entityName}/documents${suffix}`\n  }\n}\n","import type { LumiClient } from '@/core/lumi-client'\nimport { EntityClient } from '@/core/entity-client'\n\nexport class EntitiesClient {\n  readonly #lumi: LumiClient\n  [key: string]: EntityClient\n\n  constructor(lumi: LumiClient) {\n    this.#lumi = lumi\n    return new Proxy(this, {\n      get(target: EntitiesClient, p: string) {\n        if (!(p in target))\n          target[p] = new EntityClient(target.#lumi, p)\n        return target[p]\n      },\n    }) as this\n  }\n}\n","export class LumiError extends Error {\n  name: string = 'LumiError'\n  code: number\n\n  constructor(code: number, message: string) {\n    super(message)\n    this.code = code\n  }\n}\n","import type { LumiClient } from '@/core/lumi-client'\nimport type { ApiResponse } from '@/lib/request'\nimport { LumiError } from '@/lib/error'\nimport { request } from '@/lib/request'\n\nexport class EmailTool {\n  readonly #lumi: LumiClient\n\n  constructor(lumi: LumiClient) {\n    this.#lumi = lumi\n  }\n\n  /** 发送邮件 */\n  public async send({ to, subject, fromName, html, text = '', replyTo, scheduledAt }: {\n    to: string | string[]\n    subject: string\n    fromName?: string\n    html?: string\n    text?: string\n    replyTo?: string | string[]\n    scheduledAt?: string\n  }): Promise<void> {\n    if (!to || !subject || (!html && !text))\n      throw new Error('Failed to send email: Missing required parameters.')\n\n    if (typeof to === 'string')\n      to = [to]\n    if (typeof replyTo === 'string')\n      replyTo = [replyTo]\n\n    const res = await request<ApiResponse<null>>(this.#lumi, `/lm/${this.#lumi.config.projectId}/email/send`, {\n      method: 'POST',\n      body: { to, subject, fromName, html, text, replyTo, scheduledAt },\n    })\n\n    if (res.code !== 200)\n      throw new LumiError(res.code, res.message)\n  }\n}\n","import type { LumiClient } from '@/core/lumi-client'\nimport type { ApiResponse } from '@/lib/request'\nimport { LumiError } from '@/lib/error'\nimport { request } from '@/lib/request'\n\nexport interface UploadItem {\n  fileName: string\n  fileUrl?: string\n  uploadError?: string\n}\n\nexport class FileTool {\n  readonly #lumi: LumiClient\n\n  constructor(lumi: LumiClient) {\n    this.#lumi = lumi\n  }\n\n  /** 上传文件 */\n  public async upload(files: File[]): Promise<UploadItem[]> {\n    const formData = new FormData()\n    files.forEach((file) => {\n      formData.append('files', file)\n    })\n\n    const res = await request<ApiResponse<UploadItem[]>>(this.#lumi, `/lm/${this.#lumi.config.projectId}/file/batch`, {\n      method: 'POST',\n      body: formData,\n    })\n\n    if (res.code !== 200)\n      throw new LumiError(res.code, res.message)\n\n    return res.data\n  }\n\n  /** 批量删除文件 */\n  public async delete(fileUrls: string[]): Promise<void> {\n    const res = await request<ApiResponse<null>>(this.#lumi, `/lm/${this.#lumi.config.projectId}/file/batch`, {\n      method: 'DELETE',\n      body: { fileUrls },\n    })\n\n    if (res.code !== 200)\n      throw new LumiError(res.code, res.message)\n  }\n}\n","import type { LumiClient } from '@/core/lumi-client'\nimport { EmailTool, FileTool } from '@/tools'\n\nexport class ToolsClient {\n  readonly #lumi: LumiClient\n\n  public email: EmailTool\n  public file: FileTool\n\n  constructor(lumi: LumiClient) {\n    this.#lumi = lumi\n    this.email = new EmailTool(lumi)\n    this.file = new FileTool(lumi)\n  }\n}\n","import { LumiAuthClient } from '@/core/auth-client'\nimport { EntitiesClient } from '@/core/entities-client'\nimport { ToolsClient } from '@/core/tools-client'\n\nexport interface LumiClientConfig {\n  projectId: string\n  apiBaseUrl: string\n  authOrigin: string\n}\n\nexport class LumiClient {\n  public config: LumiClientConfig\n\n  public auth: LumiAuthClient\n  public entities: EntitiesClient\n  public tools: ToolsClient\n\n  constructor(config: LumiClientConfig) {\n    this.config = config\n    this.auth = new LumiAuthClient(this)\n    this.entities = new EntitiesClient(this)\n    this.tools = new ToolsClient(this)\n  }\n}\n\nexport function createClient(config: LumiClientConfig): LumiClient {\n  return new LumiClient(config)\n}\n"],"mappings":"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","names":["index_exports","__export","EmailTool","EntitiesClient","EntityClient","FileTool","LumiAuthClient","LumiClient","ToolsClient","createClient","__toCommonJS","import_uuid","import_enc_base64","import_enc_hex","import_hmac_sha256","import_sha256","import_ofetch","SECRET_KEY","rfc3986Encode","str","c","createSignatureInterceptor","secretKey","context","options","timestamp","nonce","queryParams","__spreadValues","canonicalQueryString","key","headersToSign","canonicalHeaders","payload","hashedPayload","SHA256","Hex","canonicalRequest","signature","Base64","HmacSHA256","headers","value","request","lumi","uri","__spreadProps","getIcon","_a","_b","getTitle","setStorage","key","value","storage","oldValue","newValue","getStorage","_e","_lumi","_popupName","LumiAuthClient","lumi","__privateAdd","__privateSet","getStorage","accessToken","setStorage","user","left","top","popup","__privateGet","cleanup","resolve","reject","timer","handleGlobalClick","event","handleMessage","data","origin","source","getIcon","getTitle","__async","res","request","callback","handleStorageChange","_lumi","EntityClient","lumi","entityName","__privateAdd","__privateSet","__async","filter","sort","limit","skip","res","request","__privateGet","id","data","ids","suffix","_lumi","EntitiesClient","lumi","__privateAdd","__privateSet","target","p","EntityClient","__privateGet","LumiError","code","message","_lumi","EmailTool","lumi","__privateAdd","__privateSet","_0","__async","to","subject","fromName","html","text","replyTo","scheduledAt","res","request","__privateGet","LumiError","_lumi","FileTool","lumi","__privateAdd","__privateSet","files","__async","formData","file","res","request","__privateGet","LumiError","fileUrls","_lumi","ToolsClient","lumi","__privateAdd","__privateSet","EmailTool","FileTool","LumiClient","config","LumiAuthClient","EntitiesClient","ToolsClient","createClient"]}